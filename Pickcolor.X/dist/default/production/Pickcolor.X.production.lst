

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jun 28 14:13:42 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     _INTCONbits	set	4082
    33  0000                     _IPR1bits	set	3999
    34  0000                     _PIE1bits	set	3997
    35  0000                     _PIR1bits	set	3998
    36  0000                     _RCREG	set	4014
    37  0000                     _RCSTA	set	4011
    38  0000                     _RCSTAbits	set	4011
    39  0000                     _SPBRG	set	4015
    40  0000                     _SPBRGH	set	4016
    41  0000                     _SSPADD	set	4040
    42  0000                     _SSPBUF	set	4041
    43  0000                     _SSPCON1	set	4038
    44  0000                     _SSPCON1bits	set	4038
    45  0000                     _SSPCON2	set	4037
    46  0000                     _SSPCON2bits	set	4037
    47  0000                     _SSPSTAT	set	4039
    48  0000                     _SSPSTATbits	set	4039
    49  0000                     _TRISCbits	set	3988
    50  0000                     _TXREG	set	4013
    51  0000                     _TXSTA	set	4012
    52  0000                     _TXSTAbits	set	4012
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  006C8C                     __pcinit:
    58                           	opt stack 0
    59  006C8C                     start_initialization:
    60                           	opt stack 0
    61  006C8C                     __initialization:
    62                           	opt stack 0
    63                           
    64                           ; Clear objects allocated to COMRAM (1 bytes)
    65  006C8C  6A08               	clrf	__pbssCOMRAM& (0+255),c
    66  006C8E                     end_of_initialization:
    67                           	opt stack 0
    68  006C8E                     __end_of__initialization:
    69                           	opt stack 0
    70  006C8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    71  006C90  6EF8               	movwf	tblptru,c
    72  006C92  0100               	movlb	0
    73  006C94  EFA4  F037         	goto	_main	;jump to C main() function
    74                           tblptru	equ	0xFF8
    75                           
    76                           	psect	bssCOMRAM
    77  000008                     __pbssCOMRAM:
    78                           	opt stack 0
    79  000008                     _USART_Status:
    80                           	opt stack 0
    81  000008                     	ds	1
    82                           tblptru	equ	0xFF8
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt stack 0
    87  000001                     ??_IdleI2C:
    88  000001                     ReadUSART@data:
    89                           	opt stack 0
    90  000001                     WriteUSART@data:
    91                           	opt stack 0
    92  000001                     OpenI2C@slew:
    93                           	opt stack 0
    94  000001                     OpenUSART@spbrg:
    95                           	opt stack 0
    96                           
    97                           ; 2 bytes @ 0x0
    98  000001                     	ds	1
    99  000002                     OpenI2C@sync_mode:
   100                           	opt stack 0
   101  000002                     WriteI2C@data_out:
   102                           	opt stack 0
   103                           
   104                           ; 1 bytes @ 0x1
   105  000002                     	ds	1
   106  000003                     WriteISL@data:
   107                           	opt stack 0
   108  000003                     ReadISL@address:
   109                           	opt stack 0
   110  000003                     OpenUSART@config:
   111                           	opt stack 0
   112                           
   113                           ; 1 bytes @ 0x2
   114  000003                     	ds	1
   115  000004                     WriteISL@address:
   116                           	opt stack 0
   117  000004                     ReadISL@data:
   118                           	opt stack 0
   119                           
   120                           ; 1 bytes @ 0x3
   121  000004                     	ds	1
   122  000005                     ConfigISL1@cfg:
   123                           	opt stack 0
   124  000005                     ConfigISL2@cfg:
   125                           	opt stack 0
   126  000005                     ConfigISL3@cfg:
   127                           	opt stack 0
   128  000005                     StatusISL@r:
   129                           	opt stack 0
   130                           
   131                           ; 1 bytes @ 0x4
   132  000005                     	ds	1
   133  000006                     ColorRED@a:
   134                           	opt stack 0
   135  000006                     ColorGREEN@a:
   136                           	opt stack 0
   137  000006                     ColorBLUE@a:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x5
   141  000006                     	ds	1
   142  000007                     main@rx:
   143                           	opt stack 0
   144                           
   145                           ; 1 bytes @ 0x6
   146  000007                     	ds	1
   147                           tblptru	equ	0xFF8
   148                           
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 18 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;  rx              1    6[COMRAM] unsigned char 
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   168 ;;      Params:         0       0       0       0       0       0       0
   169 ;;      Locals:         1       0       0       0       0       0       0
   170 ;;      Temps:          0       0       0       0       0       0       0
   171 ;;      Totals:         1       0       0       0       0       0       0
   172 ;;Total ram usage:        1 bytes
   173 ;; Hardware stack levels required when called:    6
   174 ;; This function calls:
   175 ;;		_ColorBLUE
   176 ;;		_ColorGREEN
   177 ;;		_ColorRED
   178 ;;		_ConfigUsart
   179 ;;		_OpenISL
   180 ;;		_StartISL
   181 ;;		_getc_USART
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  006F48                     __ptext0:
   189                           	opt stack 0
   190  006F48                     _main:
   191                           	opt stack 25
   192                           
   193                           ;main.c: 19: char rx;
   194                           ;main.c: 20: TRISCbits.RC6 = 0;
   195                           
   196                           ;incstack = 0
   197  006F48  9C94               	bcf	3988,6,c	;volatile
   198                           
   199                           ;main.c: 21: TRISCbits.RC7 = 1;
   200  006F4A  8E94               	bsf	3988,7,c	;volatile
   201                           
   202                           ;main.c: 22: TRISCbits.RC3 = 1;
   203  006F4C  8694               	bsf	3988,3,c	;volatile
   204                           
   205                           ;main.c: 23: TRISCbits.RC4 = 1;
   206  006F4E  8894               	bsf	3988,4,c	;volatile
   207                           
   208                           ;main.c: 24: ConfigUsart();
   209  006F50  EC84  F036         	call	_ConfigUsart	;wreg free
   210                           
   211                           ;main.c: 25: OpenISL();
   212  006F54  EC7A  F036         	call	_OpenISL	;wreg free
   213                           
   214                           ;main.c: 26: StartISL();
   215  006F58  EC61  F036         	call	_StartISL	;wreg free
   216  006F5C                     l1284:
   217                           
   218                           ;main.c: 28: rx = getc_USART();
   219  006F5C  EC41  F036         	call	_getc_USART	;wreg free
   220  006F60  6E07               	movwf	main@rx,c
   221                           
   222                           ;main.c: 29: switch(rx){
   223  006F62  D010               	goto	l1296
   224  006F64                     l1286:
   225                           
   226                           ;main.c: 31: ColorRED();
   227  006F64  EC13  F037         	call	_ColorRED	;wreg free
   228                           
   229                           ;main.c: 32: break;
   230  006F68  D7F9               	goto	l1284
   231  006F6A                     l1288:
   232                           
   233                           ;main.c: 35: ColorGREEN();
   234  006F6A  ECF5  F036         	call	_ColorGREEN	;wreg free
   235                           
   236                           ;main.c: 36: break;
   237  006F6E  D7F6               	goto	l1284
   238  006F70                     l1290:
   239                           
   240                           ;main.c: 39: ColorBLUE();
   241  006F70  ECD7  F036         	call	_ColorBLUE	;wreg free
   242                           
   243                           ;main.c: 40: break;
   244  006F74  D7F3               	goto	l1284
   245  006F76                     l1292:
   246                           
   247                           ;main.c: 43: ColorRED();
   248  006F76  EC13  F037         	call	_ColorRED	;wreg free
   249                           
   250                           ;main.c: 44: ColorGREEN();
   251  006F7A  ECF5  F036         	call	_ColorGREEN	;wreg free
   252                           
   253                           ;main.c: 45: ColorBLUE();
   254  006F7E  ECD7  F036         	call	_ColorBLUE	;wreg free
   255                           
   256                           ;main.c: 47: }
   257                           ;main.c: 48: }
   258                           
   259                           ;main.c: 46: break;
   260  006F82  D7EC               	goto	l1284
   261  006F84                     l1296:
   262  006F84  5007               	movf	main@rx,w,c
   263                           
   264                           ; Switch size 1, requested type "space"
   265                           ; Number of cases is 4, Range of values is 65 to 82
   266                           ; switch strategies available:
   267                           ; Name         Instructions Cycles
   268                           ; simple_byte           13     7 (average)
   269                           ;	Chosen strategy is simple_byte
   270  006F86  0A41               	xorlw	65	; case 65
   271  006F88  B4D8               	btfsc	status,2,c
   272  006F8A  D7F5               	goto	l1292
   273  006F8C  0A03               	xorlw	3	; case 66
   274  006F8E  B4D8               	btfsc	status,2,c
   275  006F90  D7EF               	goto	l1290
   276  006F92  0A05               	xorlw	5	; case 71
   277  006F94  B4D8               	btfsc	status,2,c
   278  006F96  D7E9               	goto	l1288
   279  006F98  0A15               	xorlw	21	; case 82
   280  006F9A  B4D8               	btfsc	status,2,c
   281  006F9C  D7E3               	goto	l1286
   282  006F9E  D7DE               	goto	l1284
   283  006FA0                     __end_of_main:
   284                           	opt stack 0
   285                           tblptru	equ	0xFF8
   286                           status	equ	0xFD8
   287                           
   288 ;; *************** function _getc_USART *****************
   289 ;; Defined at:
   290 ;;		line 29 in file "eusart.h"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      unsigned char 
   297 ;; Registers used:
   298 ;;		wreg, status,2, status,0, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   304 ;;      Params:         0       0       0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		_ReadUSART
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  006C82                     __ptext1:
   320                           	opt stack 0
   321  006C82                     _getc_USART:
   322                           	opt stack 29
   323  006C82                     l34:
   324  006C82  AA9E               	btfss	3998,5,c	;volatile
   325  006C84  D7FE               	goto	l34
   326                           
   327                           ;eusart.h: 31: return ReadUSART();
   328  006C86  ECAD  F036         	call	_ReadUSART	;wreg free
   329  006C8A  0012               	return	
   330  006C8C                     __end_of_getc_USART:
   331                           	opt stack 0
   332                           tblptru	equ	0xFF8
   333                           status	equ	0xFD8
   334                           
   335 ;; *************** function _ReadUSART *****************
   336 ;; Defined at:
   337 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\USART\uread.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  data            1    0[COMRAM] unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      unsigned char 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   351 ;;      Params:         0       0       0       0       0       0       0
   352 ;;      Locals:         1       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0
   354 ;;      Totals:         1       0       0       0       0       0       0
   355 ;;Total ram usage:        1 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_getc_USART
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text2
   365  006D5A                     __ptext2:
   366                           	opt stack 0
   367  006D5A                     _ReadUSART:
   368                           	opt stack 29
   369                           
   370                           ;incstack = 0
   371  006D5A  0EF2               	movlw	242
   372  006D5C  1608               	andwf	_USART_Status,f,c
   373  006D5E  ACAB               	btfss	4011,6,c	;volatile
   374  006D60  D003               	goto	l167
   375  006D62  9008               	bcf	_USART_Status,0,c
   376  006D64  B0AB               	btfsc	4011,0,c	;volatile
   377  006D66  8008               	bsf	_USART_Status,0,c
   378  006D68                     l167:
   379  006D68  B4AB               	btfsc	4011,2,c	;volatile
   380  006D6A  8408               	bsf	_USART_Status,2,c
   381  006D6C  B2AB               	btfsc	4011,1,c	;volatile
   382  006D6E  8608               	bsf	_USART_Status,3,c
   383  006D70  CFAE F001          	movff	4014,ReadUSART@data	;volatile
   384  006D74  5001               	movf	ReadUSART@data,w,c
   385  006D76  0012               	return	
   386  006D78                     __end_of_ReadUSART:
   387                           	opt stack 0
   388                           tblptru	equ	0xFF8
   389                           status	equ	0xFD8
   390                           
   391 ;; *************** function _StartISL *****************
   392 ;; Defined at:
   393 ;;		line 171 in file "isl29125.h"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   407 ;;      Params:         0       0       0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		_ConfigISL1
   416 ;;		_ConfigISL2
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text3
   423  006CC2                     __ptext3:
   424                           	opt stack 0
   425  006CC2                     _StartISL:
   426                           	opt stack 26
   427                           
   428                           ;isl29125.h: 172: ConfigISL1(0x04 | 0x08 | 0x00 | 0x00);
   429                           
   430                           ;incstack = 0
   431  006CC2  0E0C               	movlw	12
   432  006CC4  EC53  F036         	call	_ConfigISL1
   433                           
   434                           ;isl29125.h: 173: ConfigISL2(0x80 | 0x3F | 0x00);
   435  006CC8  0EBF               	movlw	191
   436  006CCA  EC5A  F036         	call	_ConfigISL2
   437  006CCE  0012               	return		;funcret
   438  006CD0                     __end_of_StartISL:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           status	equ	0xFD8
   442                           
   443 ;; *************** function _ConfigISL2 *****************
   444 ;; Defined at:
   445 ;;		line 155 in file "isl29125.h"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  cfg             1    wreg     unsigned char 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  cfg             1    4[COMRAM] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         0       0       0       0       0       0       0
   460 ;;      Locals:         1       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    3
   466 ;; This function calls:
   467 ;;		_WriteISL
   468 ;; This function is called by:
   469 ;;		_StartISL
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text4
   474  006CB4                     __ptext4:
   475                           	opt stack 0
   476  006CB4                     _ConfigISL2:
   477                           	opt stack 26
   478                           
   479                           ;incstack = 0
   480                           ;ConfigISL2@cfg stored from wreg
   481  006CB4  6E05               	movwf	ConfigISL2@cfg,c
   482                           
   483                           ;isl29125.h: 156: WriteISL(0x02,cfg);
   484  006CB6  C005  F003         	movff	ConfigISL2@cfg,WriteISL@data
   485  006CBA  0E02               	movlw	2
   486  006CBC  ECBC  F036         	call	_WriteISL
   487  006CC0  0012               	return		;funcret
   488  006CC2                     __end_of_ConfigISL2:
   489                           	opt stack 0
   490                           tblptru	equ	0xFF8
   491                           status	equ	0xFD8
   492                           
   493 ;; *************** function _OpenISL *****************
   494 ;; Defined at:
   495 ;;		line 96 in file "isl29125.h"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   509 ;;      Params:         0       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		_IdleI2C
   518 ;;		_OpenI2C
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text5
   525  006CF4                     __ptext5:
   526                           	opt stack 0
   527  006CF4                     _OpenISL:
   528                           	opt stack 29
   529                           
   530                           ;isl29125.h: 97: SSPADD = 49;
   531                           
   532                           ;incstack = 0
   533  006CF4  0E31               	movlw	49
   534  006CF6  6EC8               	movwf	4040,c	;volatile
   535                           
   536                           ;isl29125.h: 98: OpenI2C(0b00001000, 0b10000000);
   537  006CF8  0E80               	movlw	128
   538  006CFA  6E01               	movwf	OpenI2C@slew,c
   539  006CFC  0E08               	movlw	8
   540  006CFE  EC9E  F036         	call	_OpenI2C
   541                           
   542                           ;isl29125.h: 99: IdleI2C();
   543  006D02  EC68  F036         	call	_IdleI2C	;wreg free
   544  006D06  0012               	return		;funcret
   545  006D08                     __end_of_OpenISL:
   546                           	opt stack 0
   547                           tblptru	equ	0xFF8
   548                           status	equ	0xFD8
   549                           
   550 ;; *************** function _OpenI2C *****************
   551 ;; Defined at:
   552 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\i2c\i2c_open.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  sync_mode       1    wreg     unsigned char 
   555 ;;  slew            1    0[COMRAM] unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  sync_mode       1    1[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   567 ;;      Params:         1       0       0       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0
   570 ;;      Totals:         2       0       0       0       0       0       0
   571 ;;Total ram usage:        2 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_OpenISL
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text6
   581  006D3C                     __ptext6:
   582                           	opt stack 0
   583  006D3C                     _OpenI2C:
   584                           	opt stack 29
   585                           
   586                           ;incstack = 0
   587                           ;OpenI2C@sync_mode stored from wreg
   588  006D3C  6E02               	movwf	OpenI2C@sync_mode,c
   589  006D3E  0E3F               	movlw	63
   590  006D40  16C7               	andwf	4039,f,c	;volatile
   591  006D42  0E00               	movlw	0
   592  006D44  6EC6               	movwf	4038,c	;volatile
   593  006D46  0E00               	movlw	0
   594  006D48  6EC5               	movwf	4037,c	;volatile
   595  006D4A  5002               	movf	OpenI2C@sync_mode,w,c
   596  006D4C  12C6               	iorwf	4038,f,c	;volatile
   597  006D4E  5001               	movf	OpenI2C@slew,w,c
   598  006D50  12C7               	iorwf	4039,f,c	;volatile
   599  006D52  8694               	bsf	3988,3,c	;volatile
   600  006D54  8894               	bsf	3988,4,c	;volatile
   601  006D56  8AC6               	bsf	4038,5,c	;volatile
   602  006D58  0012               	return		;funcret
   603  006D5A                     __end_of_OpenI2C:
   604                           	opt stack 0
   605                           tblptru	equ	0xFF8
   606                           status	equ	0xFD8
   607                           
   608 ;; *************** function _ConfigUsart *****************
   609 ;; Defined at:
   610 ;;		line 17 in file "eusart.h"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         0       0       0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		_OpenUSART
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text7
   639  006D08                     __ptext7:
   640                           	opt stack 0
   641  006D08                     _ConfigUsart:
   642                           	opt stack 29
   643                           
   644                           ;eusart.h: 18: PIR1bits.RCIF = 0;
   645                           
   646                           ;incstack = 0
   647  006D08  9A9E               	bcf	3998,5,c	;volatile
   648                           
   649                           ;eusart.h: 19: IPR1bits.RCIP = 0;
   650  006D0A  9A9F               	bcf	3999,5,c	;volatile
   651                           
   652                           ;eusart.h: 20: PIE1bits.RCIE = 0;
   653  006D0C  9A9D               	bcf	3997,5,c	;volatile
   654                           
   655                           ;eusart.h: 21: INTCONbits.PEIE = 0;
   656  006D0E  9CF2               	bcf	intcon,6,c	;volatile
   657                           
   658                           ;eusart.h: 22: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111,
      +                          10);
   659  006D10  0E00               	movlw	0
   660  006D12  6E02               	movwf	OpenUSART@spbrg+1,c
   661  006D14  0E0A               	movlw	10
   662  006D16  6E01               	movwf	OpenUSART@spbrg,c
   663  006D18  0E3C               	movlw	60
   664  006D1A  ECD0  F037         	call	_OpenUSART
   665  006D1E  0012               	return		;funcret
   666  006D20                     __end_of_ConfigUsart:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           intcon	equ	0xFF2
   670                           status	equ	0xFD8
   671                           
   672 ;; *************** function _OpenUSART *****************
   673 ;; Defined at:
   674 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\USART\uopen.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  config          1    wreg     unsigned char 
   677 ;;  spbrg           2    0[COMRAM] unsigned int 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  config          1    2[COMRAM] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   689 ;;      Params:         2       0       0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0
   692 ;;      Totals:         3       0       0       0       0       0       0
   693 ;;Total ram usage:        3 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_ConfigUsart
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text8
   703  006FA0                     __ptext8:
   704                           	opt stack 0
   705  006FA0                     _OpenUSART:
   706                           	opt stack 29
   707                           
   708                           ;incstack = 0
   709                           ;OpenUSART@config stored from wreg
   710  006FA0  6E03               	movwf	OpenUSART@config,c
   711  006FA2  0E00               	movlw	0
   712  006FA4  6EAC               	movwf	4012,c	;volatile
   713  006FA6  0E00               	movlw	0
   714  006FA8  6EAB               	movwf	4011,c	;volatile
   715  006FAA  B003               	btfsc	OpenUSART@config,0,c
   716  006FAC  88AC               	bsf	4012,4,c	;volatile
   717  006FAE  A203               	btfss	OpenUSART@config,1,c
   718  006FB0  D002               	goto	l1164
   719  006FB2  8CAC               	bsf	4012,6,c	;volatile
   720  006FB4  8CAB               	bsf	4011,6,c	;volatile
   721  006FB6                     l1164:
   722  006FB6  B403               	btfsc	OpenUSART@config,2,c
   723  006FB8  8EAC               	bsf	4012,7,c	;volatile
   724  006FBA  A603               	btfss	OpenUSART@config,3,c
   725  006FBC  D002               	goto	l149
   726  006FBE  88AB               	bsf	4011,4,c	;volatile
   727  006FC0  D001               	goto	l1172
   728  006FC2                     l149:
   729  006FC2  8AAB               	bsf	4011,5,c	;volatile
   730  006FC4                     l1172:
   731  006FC4  B803               	btfsc	OpenUSART@config,4,c
   732  006FC6  84AC               	bsf	4012,2,c	;volatile
   733  006FC8  989E               	bcf	3998,4,c	;volatile
   734  006FCA  BA03               	btfsc	OpenUSART@config,5,c
   735  006FCC  86AB               	bsf	4011,3,c	;volatile
   736  006FCE  AC03               	btfss	OpenUSART@config,6,c
   737  006FD0  D002               	goto	l153
   738  006FD2  8A9D               	bsf	3997,5,c	;volatile
   739  006FD4  D001               	goto	l154
   740  006FD6                     l153:
   741  006FD6  9A9D               	bcf	3997,5,c	;volatile
   742  006FD8                     l154:
   743  006FD8  9A9E               	bcf	3998,5,c	;volatile
   744  006FDA  AE03               	btfss	OpenUSART@config,7,c
   745  006FDC  D002               	goto	l155
   746  006FDE  889D               	bsf	3997,4,c	;volatile
   747  006FE0  D001               	goto	l156
   748  006FE2                     l155:
   749  006FE2  989D               	bcf	3997,4,c	;volatile
   750  006FE4                     l156:
   751  006FE4  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   752  006FE8  5002               	movf	OpenUSART@spbrg+1,w,c
   753  006FEA  6EB0               	movwf	4016,c	;volatile
   754  006FEC  8AAC               	bsf	4012,5,c	;volatile
   755  006FEE  8EAB               	bsf	4011,7,c	;volatile
   756  006FF0  9C94               	bcf	3988,6,c	;volatile
   757  006FF2  8E94               	bsf	3988,7,c	;volatile
   758  006FF4  A8AC               	btfss	4012,4,c	;volatile
   759  006FF6  0012               	return	
   760  006FF8  BEAC               	btfsc	4012,7,c	;volatile
   761  006FFA  0012               	return	
   762  006FFC  8C94               	bsf	3988,6,c	;volatile
   763  006FFE  0012               	return	
   764  007000                     __end_of_OpenUSART:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           intcon	equ	0xFF2
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _ColorRED *****************
   771 ;; Defined at:
   772 ;;		line 211 in file "isl29125.h"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  a               1    5[COMRAM] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       0       0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0
   789 ;;      Totals:         1       0       0       0       0       0       0
   790 ;;Total ram usage:        1 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    5
   793 ;; This function calls:
   794 ;;		_ConfigISL1
   795 ;;		_ConfigISL3
   796 ;;		_ReadISL
   797 ;;		_StatusISL
   798 ;;		_StopADCISL
   799 ;;		_WriteUSART
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text9
   806  006E26                     __ptext9:
   807                           	opt stack 0
   808  006E26                     _ColorRED:
   809                           	opt stack 25
   810                           
   811                           ;isl29125.h: 212: char a=0;
   812                           
   813                           ;incstack = 0
   814  006E26  0E00               	movlw	0
   815  006E28  6E06               	movwf	ColorRED@a,c
   816                           
   817                           ;isl29125.h: 214: ConfigISL1(0x02 | 0x08 | 0x00 | 0x00);
   818  006E2A  0E0A               	movlw	10
   819  006E2C  EC53  F036         	call	_ConfigISL1
   820                           
   821                           ;isl29125.h: 215: ConfigISL3(0x02 | 0x0C | 0x00);
   822  006E30  0E0E               	movlw	14
   823  006E32  EC4C  F036         	call	_ConfigISL3
   824  006E36                     l1240:
   825  006E36  EC7B  F037         	call	_StatusISL	;wreg free
   826  006E3A  0A06               	xorlw	6
   827  006E3C  A4D8               	btfss	status,2,c
   828  006E3E  D7FB               	goto	l1240
   829                           
   830                           ;isl29125.h: 217: StopADCISL();
   831  006E40  EC3D  F036         	call	_StopADCISL	;wreg free
   832                           
   833                           ;isl29125.h: 218: a = ReadISL(0x0B);
   834  006E44  0E0B               	movlw	11
   835  006E46  EC31  F037         	call	_ReadISL
   836  006E4A  6E06               	movwf	ColorRED@a,c
   837                           
   838                           ;isl29125.h: 219: WriteUSART(a);
   839  006E4C  5006               	movf	ColorRED@a,w,c
   840  006E4E  EC71  F036         	call	_WriteUSART
   841                           
   842                           ;isl29125.h: 220: a = ReadISL(0x0C);
   843  006E52  0E0C               	movlw	12
   844  006E54  EC31  F037         	call	_ReadISL
   845  006E58  6E06               	movwf	ColorRED@a,c
   846                           
   847                           ;isl29125.h: 221: WriteUSART(a);
   848  006E5A  5006               	movf	ColorRED@a,w,c
   849  006E5C  EC71  F036         	call	_WriteUSART
   850  006E60  0012               	return		;funcret
   851  006E62                     __end_of_ColorRED:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           intcon	equ	0xFF2
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function _ColorGREEN *****************
   858 ;; Defined at:
   859 ;;		line 228 in file "isl29125.h"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  a               1    5[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         0       0       0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0
   876 ;;      Totals:         1       0       0       0       0       0       0
   877 ;;Total ram usage:        1 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    5
   880 ;; This function calls:
   881 ;;		_ConfigISL1
   882 ;;		_ConfigISL3
   883 ;;		_ReadISL
   884 ;;		_StatusISL
   885 ;;		_StopADCISL
   886 ;;		_WriteUSART
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text10
   893  006DEA                     __ptext10:
   894                           	opt stack 0
   895  006DEA                     _ColorGREEN:
   896                           	opt stack 25
   897                           
   898                           ;isl29125.h: 229: char a= 0;
   899                           
   900                           ;incstack = 0
   901  006DEA  0E00               	movlw	0
   902  006DEC  6E06               	movwf	ColorGREEN@a,c
   903                           
   904                           ;isl29125.h: 231: ConfigISL1(0x01 | 0x08 | 0x00 | 0x00);
   905  006DEE  0E09               	movlw	9
   906  006DF0  EC53  F036         	call	_ConfigISL1
   907                           
   908                           ;isl29125.h: 232: ConfigISL3(0x01 | 0x0C | 0x00);
   909  006DF4  0E0D               	movlw	13
   910  006DF6  EC4C  F036         	call	_ConfigISL3
   911  006DFA                     l1254:
   912  006DFA  EC7B  F037         	call	_StatusISL	;wreg free
   913  006DFE  0A06               	xorlw	6
   914  006E00  A4D8               	btfss	status,2,c
   915  006E02  D7FB               	goto	l1254
   916                           
   917                           ;isl29125.h: 234: StopADCISL();
   918  006E04  EC3D  F036         	call	_StopADCISL	;wreg free
   919                           
   920                           ;isl29125.h: 235: a = ReadISL(0x09);
   921  006E08  0E09               	movlw	9
   922  006E0A  EC31  F037         	call	_ReadISL
   923  006E0E  6E06               	movwf	ColorGREEN@a,c
   924                           
   925                           ;isl29125.h: 236: WriteUSART(a);
   926  006E10  5006               	movf	ColorGREEN@a,w,c
   927  006E12  EC71  F036         	call	_WriteUSART
   928                           
   929                           ;isl29125.h: 237: a = ReadISL(0x0A);
   930  006E16  0E0A               	movlw	10
   931  006E18  EC31  F037         	call	_ReadISL
   932  006E1C  6E06               	movwf	ColorGREEN@a,c
   933                           
   934                           ;isl29125.h: 238: WriteUSART(a);
   935  006E1E  5006               	movf	ColorGREEN@a,w,c
   936  006E20  EC71  F036         	call	_WriteUSART
   937  006E24  0012               	return		;funcret
   938  006E26                     __end_of_ColorGREEN:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           intcon	equ	0xFF2
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _ColorBLUE *****************
   945 ;; Defined at:
   946 ;;		line 245 in file "isl29125.h"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  a               1    5[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   960 ;;      Params:         0       0       0       0       0       0       0
   961 ;;      Locals:         1       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    5
   967 ;; This function calls:
   968 ;;		_ConfigISL1
   969 ;;		_ConfigISL3
   970 ;;		_ReadISL
   971 ;;		_StatusISL
   972 ;;		_StopADCISL
   973 ;;		_WriteUSART
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text11
   980  006DAE                     __ptext11:
   981                           	opt stack 0
   982  006DAE                     _ColorBLUE:
   983                           	opt stack 25
   984                           
   985                           ;isl29125.h: 246: char a=0;
   986                           
   987                           ;incstack = 0
   988  006DAE  0E00               	movlw	0
   989  006DB0  6E06               	movwf	ColorBLUE@a,c
   990                           
   991                           ;isl29125.h: 248: ConfigISL1(0x03 | 0x08 | 0x00 | 0x00);
   992  006DB2  0E0B               	movlw	11
   993  006DB4  EC53  F036         	call	_ConfigISL1
   994                           
   995                           ;isl29125.h: 249: ConfigISL3(0x03 | 0x0C | 0x00);
   996  006DB8  0E0F               	movlw	15
   997  006DBA  EC4C  F036         	call	_ConfigISL3
   998  006DBE                     l1268:
   999  006DBE  EC7B  F037         	call	_StatusISL	;wreg free
  1000  006DC2  0A06               	xorlw	6
  1001  006DC4  A4D8               	btfss	status,2,c
  1002  006DC6  D7FB               	goto	l1268
  1003                           
  1004                           ;isl29125.h: 251: StopADCISL();
  1005  006DC8  EC3D  F036         	call	_StopADCISL	;wreg free
  1006                           
  1007                           ;isl29125.h: 252: a = ReadISL(0x0D);
  1008  006DCC  0E0D               	movlw	13
  1009  006DCE  EC31  F037         	call	_ReadISL
  1010  006DD2  6E06               	movwf	ColorBLUE@a,c
  1011                           
  1012                           ;isl29125.h: 253: WriteUSART(a);
  1013  006DD4  5006               	movf	ColorBLUE@a,w,c
  1014  006DD6  EC71  F036         	call	_WriteUSART
  1015                           
  1016                           ;isl29125.h: 254: a = ReadISL(0x0E);
  1017  006DDA  0E0E               	movlw	14
  1018  006DDC  EC31  F037         	call	_ReadISL
  1019  006DE0  6E06               	movwf	ColorBLUE@a,c
  1020                           
  1021                           ;isl29125.h: 255: WriteUSART(a);
  1022  006DE2  5006               	movf	ColorBLUE@a,w,c
  1023  006DE4  EC71  F036         	call	_WriteUSART
  1024  006DE8  0012               	return		;funcret
  1025  006DEA                     __end_of_ColorBLUE:
  1026                           	opt stack 0
  1027                           tblptru	equ	0xFF8
  1028                           intcon	equ	0xFF2
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function _WriteUSART *****************
  1032 ;; Defined at:
  1033 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\USART\uwrite.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  data            1    wreg     unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  data            1    0[COMRAM] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1047 ;;      Params:         0       0       0       0       0       0       0
  1048 ;;      Locals:         1       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0
  1050 ;;      Totals:         1       0       0       0       0       0       0
  1051 ;;Total ram usage:        1 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_ColorRED
  1057 ;;		_ColorGREEN
  1058 ;;		_ColorBLUE
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text12
  1063  006CE2                     __ptext12:
  1064                           	opt stack 0
  1065  006CE2                     _WriteUSART:
  1066                           	opt stack 29
  1067                           
  1068                           ;incstack = 0
  1069                           ;WriteUSART@data stored from wreg
  1070  006CE2  6E01               	movwf	WriteUSART@data,c
  1071  006CE4  ACAC               	btfss	4012,6,c	;volatile
  1072  006CE6  D003               	goto	l1060
  1073  006CE8  90AC               	bcf	4012,0,c	;volatile
  1074  006CEA  B208               	btfsc	_USART_Status,1,c
  1075  006CEC  80AC               	bsf	4012,0,c	;volatile
  1076  006CEE                     l1060:
  1077  006CEE  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  1078  006CF2  0012               	return		;funcret
  1079  006CF4                     __end_of_WriteUSART:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           intcon	equ	0xFF2
  1083                           status	equ	0xFD8
  1084                           
  1085 ;; *************** function _StopADCISL *****************
  1086 ;; Defined at:
  1087 ;;		line 180 in file "isl29125.h"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1101 ;;      Params:         0       0       0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    4
  1108 ;; This function calls:
  1109 ;;		_ConfigISL1
  1110 ;; This function is called by:
  1111 ;;		_ColorRED
  1112 ;;		_ColorGREEN
  1113 ;;		_ColorBLUE
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text13
  1118  006C7A                     __ptext13:
  1119                           	opt stack 0
  1120  006C7A                     _StopADCISL:
  1121                           	opt stack 25
  1122                           
  1123                           ;isl29125.h: 181: ConfigISL1(0x00 | 0x08 | 0x00 | 0x00);
  1124                           
  1125                           ;incstack = 0
  1126  006C7A  0E08               	movlw	8
  1127  006C7C  EC53  F036         	call	_ConfigISL1
  1128  006C80  0012               	return		;funcret
  1129  006C82                     __end_of_StopADCISL:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           intcon	equ	0xFF2
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _ConfigISL1 *****************
  1136 ;; Defined at:
  1137 ;;		line 147 in file "isl29125.h"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  cfg             1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  cfg             1    4[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		_WriteISL
  1160 ;; This function is called by:
  1161 ;;		_StartISL
  1162 ;;		_StopADCISL
  1163 ;;		_ColorRED
  1164 ;;		_ColorGREEN
  1165 ;;		_ColorBLUE
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text14
  1170  006CA6                     __ptext14:
  1171                           	opt stack 0
  1172  006CA6                     _ConfigISL1:
  1173                           	opt stack 26
  1174                           
  1175                           ;incstack = 0
  1176                           ;ConfigISL1@cfg stored from wreg
  1177  006CA6  6E05               	movwf	ConfigISL1@cfg,c
  1178                           
  1179                           ;isl29125.h: 148: WriteISL(0x01,cfg);
  1180  006CA8  C005  F003         	movff	ConfigISL1@cfg,WriteISL@data
  1181  006CAC  0E01               	movlw	1
  1182  006CAE  ECBC  F036         	call	_WriteISL
  1183  006CB2  0012               	return		;funcret
  1184  006CB4                     __end_of_ConfigISL1:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           intcon	equ	0xFF2
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _StatusISL *****************
  1191 ;; Defined at:
  1192 ;;		line 188 in file "isl29125.h"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  r               1    4[COMRAM] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      unsigned char 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1206 ;;      Params:         0       0       0       0       0       0       0
  1207 ;;      Locals:         1       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0
  1209 ;;      Totals:         1       0       0       0       0       0       0
  1210 ;;Total ram usage:        1 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		_ReadISL
  1215 ;; This function is called by:
  1216 ;;		_ColorRED
  1217 ;;		_ColorGREEN
  1218 ;;		_ColorBLUE
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text15
  1223  006EF6                     __ptext15:
  1224                           	opt stack 0
  1225  006EF6                     _StatusISL:
  1226                           	opt stack 26
  1227                           
  1228                           ;isl29125.h: 189: char r;
  1229                           ;isl29125.h: 190: r = ReadISL(0x08);
  1230                           
  1231                           ;incstack = 0
  1232  006EF6  0E08               	movlw	8
  1233  006EF8  EC31  F037         	call	_ReadISL
  1234  006EFC  6E05               	movwf	StatusISL@r,c
  1235                           
  1236                           ;isl29125.h: 191: if(r == 0x02)
  1237  006EFE  0E02               	movlw	2
  1238  006F00  1805               	xorwf	StatusISL@r,w,c
  1239  006F02  A4D8               	btfss	status,2,c
  1240  006F04  D002               	goto	l1018
  1241                           
  1242                           ;isl29125.h: 192: return 0;
  1243  006F06  0E00               	movlw	0
  1244  006F08  0012               	return	
  1245  006F0A                     l1018:
  1246                           
  1247                           ;isl29125.h: 193: if(r == 0x04)
  1248  006F0A  0E04               	movlw	4
  1249  006F0C  1805               	xorwf	StatusISL@r,w,c
  1250  006F0E  A4D8               	btfss	status,2,c
  1251  006F10  D002               	goto	l1024
  1252                           
  1253                           ;isl29125.h: 194: return 1;
  1254  006F12  0E01               	movlw	1
  1255  006F14  0012               	return	
  1256  006F16                     l1024:
  1257                           
  1258                           ;isl29125.h: 195: if(r == 0x10)
  1259  006F16  0E10               	movlw	16
  1260  006F18  1805               	xorwf	StatusISL@r,w,c
  1261  006F1A  A4D8               	btfss	status,2,c
  1262  006F1C  D002               	goto	l1030
  1263                           
  1264                           ;isl29125.h: 196: return 2;
  1265  006F1E  0E02               	movlw	2
  1266  006F20  0012               	return	
  1267  006F22                     l1030:
  1268                           
  1269                           ;isl29125.h: 197: if(r == 0x20)
  1270  006F22  0E20               	movlw	32
  1271  006F24  1805               	xorwf	StatusISL@r,w,c
  1272  006F26  A4D8               	btfss	status,2,c
  1273  006F28  D002               	goto	l1036
  1274                           
  1275                           ;isl29125.h: 198: return 3;
  1276  006F2A  0E03               	movlw	3
  1277  006F2C  0012               	return	
  1278  006F2E                     l1036:
  1279                           
  1280                           ;isl29125.h: 199: if(r == 0x30)
  1281  006F2E  0E30               	movlw	48
  1282  006F30  1805               	xorwf	StatusISL@r,w,c
  1283  006F32  A4D8               	btfss	status,2,c
  1284  006F34  D002               	goto	l1042
  1285                           
  1286                           ;isl29125.h: 200: return 4;
  1287  006F36  0E04               	movlw	4
  1288  006F38  0012               	return	
  1289  006F3A                     l1042:
  1290                           
  1291                           ;isl29125.h: 201: if(r == 0x01)
  1292  006F3A  0405               	decf	StatusISL@r,w,c
  1293  006F3C  A4D8               	btfss	status,2,c
  1294  006F3E  D002               	goto	l1050
  1295                           
  1296                           ;isl29125.h: 202: return 5;
  1297  006F40  0E05               	movlw	5
  1298  006F42  0012               	return	
  1299  006F44                     l1050:
  1300                           
  1301                           ;isl29125.h: 203: else
  1302                           ;isl29125.h: 204: return 6;
  1303  006F44  0E06               	movlw	6
  1304  006F46  0012               	return	
  1305  006F48                     __end_of_StatusISL:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           intcon	equ	0xFF2
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function _ReadISL *****************
  1312 ;; Defined at:
  1313 ;;		line 125 in file "isl29125.h"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  address         1    wreg     unsigned char 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  address         1    2[COMRAM] unsigned char 
  1318 ;;  data            1    3[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      unsigned char 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         0       0       0       0       0       0       0
  1329 ;;      Locals:         2       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0
  1331 ;;      Totals:         2       0       0       0       0       0       0
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		_IdleI2C
  1337 ;;		_ReadI2C
  1338 ;;		_WriteI2C
  1339 ;; This function is called by:
  1340 ;;		_StatusISL
  1341 ;;		_ColorRED
  1342 ;;		_ColorGREEN
  1343 ;;		_ColorBLUE
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text16
  1348  006E62                     __ptext16:
  1349                           	opt stack 0
  1350  006E62                     _ReadISL:
  1351                           	opt stack 26
  1352                           
  1353                           ;incstack = 0
  1354                           ;ReadISL@address stored from wreg
  1355  006E62  6E03               	movwf	ReadISL@address,c
  1356                           
  1357                           ;isl29125.h: 126: char data;
  1358                           ;isl29125.h: 127: IdleI2C();
  1359  006E64  EC68  F036         	call	_IdleI2C	;wreg free
  1360                           
  1361                           ;isl29125.h: 128: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1362  006E68  80C5               	bsf	4037,0,c	;volatile
  1363  006E6A                     l55:
  1364  006E6A  B0C5               	btfsc	4037,0,c	;volatile
  1365  006E6C  D7FE               	goto	l55
  1366  006E6E                     l58:
  1367  006E6E  B0C5               	btfsc	4037,0,c	;volatile
  1368  006E70  D7FE               	goto	l58
  1369                           
  1370                           ;isl29125.h: 130: WriteI2C(0x88);
  1371  006E72  0E88               	movlw	136
  1372  006E74  EC55  F037         	call	_WriteI2C
  1373                           
  1374                           ;isl29125.h: 131: IdleI2C();
  1375  006E78  EC68  F036         	call	_IdleI2C	;wreg free
  1376                           
  1377                           ;isl29125.h: 132: WriteI2C(address);
  1378  006E7C  5003               	movf	ReadISL@address,w,c
  1379  006E7E  EC55  F037         	call	_WriteI2C
  1380                           
  1381                           ;isl29125.h: 133: IdleI2C();
  1382  006E82  EC68  F036         	call	_IdleI2C	;wreg free
  1383                           
  1384                           ;isl29125.h: 134: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  1385  006E86  82C5               	bsf	4037,1,c	;volatile
  1386  006E88                     l61:
  1387  006E88  B2C5               	btfsc	4037,1,c	;volatile
  1388  006E8A  D7FE               	goto	l61
  1389  006E8C                     l64:
  1390  006E8C  B2C5               	btfsc	4037,1,c	;volatile
  1391  006E8E  D7FE               	goto	l64
  1392                           
  1393                           ;isl29125.h: 136: WriteI2C(0x89);
  1394  006E90  0E89               	movlw	137
  1395  006E92  EC55  F037         	call	_WriteI2C
  1396                           
  1397                           ;isl29125.h: 137: IdleI2C();
  1398  006E96  EC68  F036         	call	_IdleI2C	;wreg free
  1399                           
  1400                           ;isl29125.h: 138: data = ReadI2C();
  1401  006E9A  EC90  F036         	call	_ReadI2C	;wreg free
  1402  006E9E  6E04               	movwf	ReadISL@data,c
  1403                           
  1404                           ;isl29125.h: 139: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1405  006EA0  84C5               	bsf	4037,2,c	;volatile
  1406  006EA2                     l67:
  1407  006EA2  B4C5               	btfsc	4037,2,c	;volatile
  1408  006EA4  D7FE               	goto	l67
  1409                           
  1410                           ;isl29125.h: 140: return data;
  1411  006EA6  5004               	movf	ReadISL@data,w,c
  1412  006EA8  0012               	return	
  1413  006EAA                     __end_of_ReadISL:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           intcon	equ	0xFF2
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _ReadI2C *****************
  1420 ;; Defined at:
  1421 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\i2c\i2c_read.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      unsigned char 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_ReadISL
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text17
  1449  006D20                     __ptext17:
  1450                           	opt stack 0
  1451  006D20                     _ReadI2C:
  1452                           	opt stack 27
  1453                           
  1454                           ;incstack = 0
  1455  006D20  50C6               	movf	4038,w,c	;volatile
  1456  006D22  0B0F               	andlw	15
  1457  006D24  0A08               	xorlw	8
  1458  006D26  B4D8               	btfsc	status,2,c
  1459  006D28  D004               	goto	l216
  1460  006D2A  50C6               	movf	4038,w,c	;volatile
  1461  006D2C  0B0F               	andlw	15
  1462  006D2E  0A0B               	xorlw	11
  1463  006D30  B4D8               	btfsc	status,2,c
  1464  006D32                     l216:
  1465  006D32  86C5               	bsf	4037,3,c	;volatile
  1466  006D34                     l217:
  1467  006D34  A0C7               	btfss	4039,0,c	;volatile
  1468  006D36  D7FE               	goto	l217
  1469  006D38  50C9               	movf	4041,w,c	;volatile
  1470  006D3A  0012               	return	
  1471  006D3C                     __end_of_ReadI2C:
  1472                           	opt stack 0
  1473                           tblptru	equ	0xFF8
  1474                           intcon	equ	0xFF2
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _ConfigISL3 *****************
  1478 ;; Defined at:
  1479 ;;		line 163 in file "isl29125.h"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  cfg             1    wreg     unsigned char 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  cfg             1    4[COMRAM] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         0       0       0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         1       0       0       0       0       0       0
  1497 ;;Total ram usage:        1 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    3
  1500 ;; This function calls:
  1501 ;;		_WriteISL
  1502 ;; This function is called by:
  1503 ;;		_ColorRED
  1504 ;;		_ColorGREEN
  1505 ;;		_ColorBLUE
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text18
  1510  006C98                     __ptext18:
  1511                           	opt stack 0
  1512  006C98                     _ConfigISL3:
  1513                           	opt stack 26
  1514                           
  1515                           ;incstack = 0
  1516                           ;ConfigISL3@cfg stored from wreg
  1517  006C98  6E05               	movwf	ConfigISL3@cfg,c
  1518                           
  1519                           ;isl29125.h: 164: WriteISL(0x03,cfg);
  1520  006C9A  C005  F003         	movff	ConfigISL3@cfg,WriteISL@data
  1521  006C9E  0E03               	movlw	3
  1522  006CA0  ECBC  F036         	call	_WriteISL
  1523  006CA4  0012               	return		;funcret
  1524  006CA6                     __end_of_ConfigISL3:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           intcon	equ	0xFF2
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _WriteISL *****************
  1531 ;; Defined at:
  1532 ;;		line 107 in file "isl29125.h"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  address         1    wreg     unsigned char 
  1535 ;;  data            1    2[COMRAM] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  address         1    3[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         1       0       0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    2
  1554 ;; This function calls:
  1555 ;;		_IdleI2C
  1556 ;;		_WriteI2C
  1557 ;; This function is called by:
  1558 ;;		_ConfigISL1
  1559 ;;		_ConfigISL2
  1560 ;;		_ConfigISL3
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text19
  1565  006D78                     __ptext19:
  1566                           	opt stack 0
  1567  006D78                     _WriteISL:
  1568                           	opt stack 26
  1569                           
  1570                           ;incstack = 0
  1571                           ;WriteISL@address stored from wreg
  1572  006D78  6E04               	movwf	WriteISL@address,c
  1573                           
  1574                           ;isl29125.h: 108: IdleI2C();
  1575  006D7A  EC68  F036         	call	_IdleI2C	;wreg free
  1576                           
  1577                           ;isl29125.h: 109: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1578  006D7E  80C5               	bsf	4037,0,c	;volatile
  1579  006D80                     l43:
  1580  006D80  B0C5               	btfsc	4037,0,c	;volatile
  1581  006D82  D7FE               	goto	l43
  1582  006D84                     l46:
  1583  006D84  B0C5               	btfsc	4037,0,c	;volatile
  1584  006D86  D7FE               	goto	l46
  1585                           
  1586                           ;isl29125.h: 111: WriteI2C(0x88);
  1587  006D88  0E88               	movlw	136
  1588  006D8A  EC55  F037         	call	_WriteI2C
  1589                           
  1590                           ;isl29125.h: 112: IdleI2C();
  1591  006D8E  EC68  F036         	call	_IdleI2C	;wreg free
  1592                           
  1593                           ;isl29125.h: 113: WriteI2C(address);
  1594  006D92  5004               	movf	WriteISL@address,w,c
  1595  006D94  EC55  F037         	call	_WriteI2C
  1596                           
  1597                           ;isl29125.h: 114: IdleI2C();
  1598  006D98  EC68  F036         	call	_IdleI2C	;wreg free
  1599                           
  1600                           ;isl29125.h: 115: WriteI2C(data);
  1601  006D9C  5003               	movf	WriteISL@data,w,c
  1602  006D9E  EC55  F037         	call	_WriteI2C
  1603                           
  1604                           ;isl29125.h: 116: IdleI2C();
  1605  006DA2  EC68  F036         	call	_IdleI2C	;wreg free
  1606                           
  1607                           ;isl29125.h: 117: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1608  006DA6  84C5               	bsf	4037,2,c	;volatile
  1609  006DA8                     l49:
  1610  006DA8  A4C5               	btfss	4037,2,c	;volatile
  1611  006DAA  0012               	return	
  1612  006DAC  D7FD               	goto	l49
  1613  006DAE                     __end_of_WriteISL:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           intcon	equ	0xFF2
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _WriteI2C *****************
  1620 ;; Defined at:
  1621 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\i2c\i2c_writ.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  data_out        1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  data_out        1    1[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         0       0       0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0
  1638 ;;      Totals:         1       0       0       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		_IdleI2C
  1644 ;; This function is called by:
  1645 ;;		_WriteISL
  1646 ;;		_ReadISL
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text20
  1651  006EAA                     __ptext20:
  1652                           	opt stack 0
  1653  006EAA                     _WriteI2C:
  1654                           	opt stack 26
  1655                           
  1656                           ;incstack = 0
  1657                           ;WriteI2C@data_out stored from wreg
  1658  006EAA  6E02               	movwf	WriteI2C@data_out,c
  1659  006EAC  C002  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1660  006EB0  BEC6               	btfsc	4038,7,c	;volatile
  1661  006EB2  0012               	return	
  1662                           
  1663                           ;	Return value of _WriteI2C is never used
  1664  006EB4  50C6               	movf	4038,w,c	;volatile
  1665  006EB6  0B0F               	andlw	15
  1666  006EB8  0A08               	xorlw	8
  1667  006EBA  B4D8               	btfsc	status,2,c
  1668  006EBC  D00C               	goto	l880
  1669  006EBE  50C6               	movf	4038,w,c	;volatile
  1670  006EC0  0B0F               	andlw	15
  1671  006EC2  0A0B               	xorlw	11
  1672  006EC4  B4D8               	btfsc	status,2,c
  1673  006EC6  D007               	goto	l880
  1674  006EC8  88C6               	bsf	4038,4,c	;volatile
  1675  006ECA                     l241:
  1676  006ECA  A69E               	btfss	3998,3,c	;volatile
  1677  006ECC  D7FE               	goto	l241
  1678  006ECE  B4C7               	btfsc	4039,2,c	;volatile
  1679  006ED0  0012               	return	
  1680  006ED2  50C7               	movf	4039,w,c	;volatile
  1681                           
  1682                           ;	Return value of _WriteI2C is never used
  1683                           
  1684                           ;	Return value of _WriteI2C is never used
  1685  006ED4  0012               	return	
  1686  006ED6                     l880:
  1687  006ED6  50C6               	movf	4038,w,c	;volatile
  1688  006ED8  0B0F               	andlw	15
  1689  006EDA  0A08               	xorlw	8
  1690  006EDC  B4D8               	btfsc	status,2,c
  1691  006EDE  D005               	goto	l250
  1692  006EE0  50C6               	movf	4038,w,c	;volatile
  1693  006EE2  0B0F               	andlw	15
  1694  006EE4  0A0B               	xorlw	11
  1695  006EE6  A4D8               	btfss	status,2,c
  1696  006EE8  0012               	return	
  1697  006EEA                     l250:
  1698  006EEA  B0C7               	btfsc	4039,0,c	;volatile
  1699  006EEC  D7FE               	goto	l250
  1700  006EEE  EC68  F036         	call	_IdleI2C	;wreg free
  1701  006EF2  50C5               	movf	4037,w,c	;volatile
  1702                           
  1703                           ;	Return value of _WriteI2C is never used
  1704                           
  1705                           ;	Return value of _WriteI2C is never used
  1706  006EF4  0012               	return	
  1707  006EF6                     __end_of_WriteI2C:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           intcon	equ	0xFF2
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _IdleI2C *****************
  1714 ;; Defined at:
  1715 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\sources\pic18\plib\i2c\i2c_idle.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1729 ;;      Params:         0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0
  1731 ;;      Temps:          1       0       0       0       0       0       0
  1732 ;;      Totals:         1       0       0       0       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_OpenISL
  1739 ;;		_WriteISL
  1740 ;;		_ReadISL
  1741 ;;		_WriteI2C
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text21
  1746  006CD0                     __ptext21:
  1747                           	opt stack 0
  1748  006CD0                     _IdleI2C:
  1749                           	opt stack 26
  1750  006CD0                     l856:
  1751  006CD0  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  1752  006CD4  0E1F               	movlw	31
  1753  006CD6  1601               	andwf	??_IdleI2C,f,c
  1754  006CD8  A4D8               	btfss	status,2,c
  1755  006CDA  D7FA               	goto	l856
  1756  006CDC  A4C7               	btfss	4039,2,c	;volatile
  1757  006CDE  0012               	return	
  1758  006CE0  D7F7               	goto	l856
  1759  006CE2                     __end_of_IdleI2C:
  1760                           	opt stack 0
  1761  0000                     tblptru	equ	0xFF8
  1762                           intcon	equ	0xFF2
  1763                           status	equ	0xFD8
  1764                           tblptru	equ	0xFF8
  1765                           intcon	equ	0xFF2
  1766                           status	equ	0xFD8
  1767                           
  1768                           	psect	rparam
  1769  0000                     tblptru	equ	0xFF8
  1770                           intcon	equ	0xFF2
  1771                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ColorBLUE
    _main->_ColorGREEN
    _main->_ColorRED
    _getc_USART->_ReadUSART
    _StartISL->_ConfigISL1
    _StartISL->_ConfigISL2
    _ConfigISL2->_WriteISL
    _OpenISL->_OpenI2C
    _ConfigUsart->_OpenUSART
    _ColorRED->_ConfigISL1
    _ColorRED->_ConfigISL3
    _ColorRED->_StatusISL
    _ColorGREEN->_ConfigISL1
    _ColorGREEN->_ConfigISL3
    _ColorGREEN->_StatusISL
    _ColorBLUE->_ConfigISL1
    _ColorBLUE->_ConfigISL3
    _ColorBLUE->_StatusISL
    _StopADCISL->_ConfigISL1
    _ConfigISL1->_WriteISL
    _StatusISL->_ReadISL
    _ReadISL->_WriteI2C
    _ConfigISL3->_WriteISL
    _WriteISL->_WriteI2C
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3424
                                              6 COMRAM     1     1      0
                          _ColorBLUE
                         _ColorGREEN
                           _ColorRED
                        _ConfigUsart
                            _OpenISL
                           _StartISL
                         _getc_USART
 ---------------------------------------------------------------------------------
 (1) _getc_USART                                           0     0      0      15
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _StartISL                                             0     0      0     420
                         _ConfigISL1
                         _ConfigISL2
 ---------------------------------------------------------------------------------
 (2) _ConfigISL2                                           1     1      0     210
                                              4 COMRAM     1     1      0
                           _WriteISL
 ---------------------------------------------------------------------------------
 (1) _OpenISL                                              0     0      0      87
                            _IdleI2C
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      87
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ConfigUsart                                          0     0      0     263
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     263
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ColorRED                                             1     1      0     872
                                              5 COMRAM     1     1      0
                         _ConfigISL1
                         _ConfigISL3
                            _ReadISL
                          _StatusISL
                         _StopADCISL
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _ColorGREEN                                           1     1      0     872
                                              5 COMRAM     1     1      0
                         _ConfigISL1
                         _ConfigISL3
                            _ReadISL
                          _StatusISL
                         _StopADCISL
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _ColorBLUE                                            1     1      0     872
                                              5 COMRAM     1     1      0
                         _ConfigISL1
                         _ConfigISL3
                            _ReadISL
                          _StatusISL
                         _StopADCISL
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StopADCISL                                           0     0      0     210
                         _ConfigISL1
 ---------------------------------------------------------------------------------
 (2) _ConfigISL1                                           1     1      0     210
                                              4 COMRAM     1     1      0
                           _WriteISL
 ---------------------------------------------------------------------------------
 (2) _StatusISL                                            1     1      0     135
                                              4 COMRAM     1     1      0
                            _ReadISL
 ---------------------------------------------------------------------------------
 (3) _ReadISL                                              2     2      0      45
                                              2 COMRAM     2     2      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigISL3                                           1     1      0     210
                                              4 COMRAM     1     1      0
                           _WriteISL
 ---------------------------------------------------------------------------------
 (3) _WriteISL                                             2     1      1     188
                                              2 COMRAM     2     1      1
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ColorBLUE
     _ConfigISL1
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ConfigISL3
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ReadISL
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _StatusISL
       _ReadISL
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _StopADCISL
       _ConfigISL1
         _WriteISL
           _IdleI2C
           _WriteI2C
             _IdleI2C
     _WriteUSART
   _ColorGREEN
     _ConfigISL1
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ConfigISL3
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ReadISL
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _StatusISL
       _ReadISL
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _StopADCISL
       _ConfigISL1
         _WriteISL
           _IdleI2C
           _WriteI2C
             _IdleI2C
     _WriteUSART
   _ColorRED
     _ConfigISL1
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ConfigISL3
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ReadISL
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _StatusISL
       _ReadISL
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     _StopADCISL
       _ConfigISL1
         _WriteISL
           _IdleI2C
           _WriteI2C
             _IdleI2C
     _WriteUSART
   _ConfigUsart
     _OpenUSART
   _OpenISL
     _IdleI2C
     _OpenI2C
   _StartISL
     _ConfigISL1
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _ConfigISL2
       _WriteISL
         _IdleI2C
         _WriteI2C
           _IdleI2C
   _getc_USART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       8       1        8.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       3        0.0%
DATA                 0      0       8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jun 28 14:13:42 2016

            _SSPSTATbits 000FC7                       l34 6C82                       l43 6D80  
                     l61 6E88                       l46 6D84                       l55 6E6A  
                     l64 6E8C                       l49 6DA8                       l58 6E6E  
                     l67 6EA2                      l216 6D32                      l241 6ECA  
                    l217 6D34                      l153 6FD6                      l250 6EEA  
                    l154 6FD8                      l155 6FE2                      l156 6FE4  
                    l149 6FC2                      l167 6D68                      l856 6CD0  
                    l880 6ED6             __CFG_WDT$OFF 000000                     l1030 6F22  
                   l1024 6F16                     l1050 6F44                     l1042 6F3A  
                   l1018 6F0A                     l1036 6F2E                     l1060 6CEE  
                   l1240 6E36                     l1172 6FC4                     l1164 6FB6  
                   l1254 6DFA                     l1290 6F70                     l1268 6DBE  
                   l1292 6F76                     l1284 6F5C                     l1286 6F64  
                   l1288 6F6A                     l1296 6F84                     _main 6F48  
            ReadISL@data 0004                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_IdleI2C 6CE2             ___param_bank 000010          __end_of_ReadI2C 6D3C  
    __end_of_ConfigUsart 6D20          __end_of_ReadISL 6EAA            __CFG_OSC$RCIO 000000  
        __end_of_OpenI2C 6D5A          __end_of_OpenISL 6D08                    ?_main 0001  
             _ConfigISL1 6CA6               _ConfigISL2 6CB4               _ConfigISL3 6C98  
             _ColorGREEN 6DEA                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
         __CFG_FCMEN$OFF 000000          WriteISL@address 0004                    status 000FD8  
         WriteUSART@data 0001         __end_of_ColorRED 6E62          __initialization 6C8C  
           __end_of_main 6FA0                   ??_main 0007            __activetblptr 000002  
     __size_of_ColorBLUE 003C         __end_of_StartISL 6CD0         __end_of_WriteI2C 6EF6  
       __end_of_WriteISL 6DAE              OpenI2C@slew 0001                ??_IdleI2C 0001  
     __size_of_ReadUSART 001E                   _SPBRGH 000FB0                   _SSPADD 000FC8  
                 _SSPBUF 000FC9              _ConfigUsart 6D08                ??_ReadI2C 0001  
              ??_ReadISL 0003                ??_OpenI2C 0002                ??_OpenISL 0003  
     __size_of_OpenUSART 0060                   main@rx 0007              ?_ConfigISL1 0001  
            ?_ConfigISL2 0001              ?_ConfigISL3 0001              ?_ColorGREEN 0001  
             _StopADCISL 6C7A                   tblptru 000FF8       __size_of_StatusISL 0052  
             __accesstop 0060  __end_of__initialization 6C8E            ___rparam_used 000001  
           WriteISL@data 0003        __end_of_ColorBLUE 6DEA               StatusISL@r 0005  
             _WriteUSART 6CE2           __pcstackCOMRAM 0001        __end_of_ReadUSART 6D78  
          ReadUSART@data 0001        __end_of_OpenUSART 7000                ?_ColorRED 0001  
    __size_of_ConfigISL1 000E      __size_of_ConfigISL2 000E      __size_of_ConfigISL3 000E  
    __size_of_ColorGREEN 003C                ?_StartISL 0001        __end_of_StatusISL 6F48  
              ?_WriteI2C 0001                ?_WriteISL 0003               _getc_USART 6C82  
            ?_StopADCISL 0001               ??_ColorRED 0006                  _SSPCON1 000FC6  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7                  _IdleI2C 6CD0  
                _ReadI2C 6D20                  _ReadISL 6E62                  _OpenI2C 6D3C  
                _OpenISL 6CF4                  __Hparam 0000                  __Lparam 0000  
            ?_WriteUSART 0001               ??_StartISL 0006                  __pcinit 6C8C  
             ??_WriteI2C 0002               ??_WriteISL 0004                  __ramtop 0600  
                __ptext0 6F48                  __ptext1 6C82                  __ptext2 6D5A  
                __ptext3 6CC2                  __ptext4 6CB4                  __ptext5 6CF4  
                __ptext6 6D3C                  __ptext7 6D08                  __ptext8 6FA0  
                __ptext9 6E26     end_of_initialization 6C8E           ReadISL@address 0003  
          __Lmediumconst 0000             ?_ConfigUsart 0001      __size_of_StopADCISL 0008  
              _RCSTAbits 000FAB                ColorRED@a 0006              ?_getc_USART 0001  
           ??_ConfigISL1 0005             ??_ConfigISL2 0005             ??_ConfigISL3 0005  
           ??_ColorGREEN 0006                _TRISCbits 000F94      __size_of_WriteUSART 0012  
              _TXSTAbits 000FAC       __end_of_ConfigISL1 6CB4       __end_of_ConfigISL2 6CC2  
     __end_of_ConfigISL3 6CA6       __end_of_ColorGREEN 6E26                _ColorBLUE 6DAE  
    start_initialization 6C8C                _ReadUSART 6D5A         WriteI2C@data_out 0002  
      __size_of_ColorRED 003C                _OpenUSART 6FA0      __size_of_getc_USART 000A  
             ?_ColorBLUE 0001        __size_of_StartISL 000E                _StatusISL 6EF6  
      __size_of_WriteI2C 004C             ??_StopADCISL 0006        __size_of_WriteISL 0036  
            __pbssCOMRAM 0008               ?_ReadUSART 0001                 ?_IdleI2C 0001  
             ?_OpenUSART 0001                 ?_ReadI2C 0001                 ?_ReadISL 0001  
               ?_OpenI2C 0001                 ?_OpenISL 0001     __size_of_ConfigUsart 0018  
           ??_WriteUSART 0001       __end_of_StopADCISL 6C82            ConfigISL1@cfg 0005  
          ConfigISL2@cfg 0005            ConfigISL3@cfg 0005               ?_StatusISL 0001  
     __end_of_WriteUSART 6CF4                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E              ??_ColorBLUE 0006             ??_getc_USART 0002  
            ??_ReadUSART 0001                 _ColorRED 6E26         OpenI2C@sync_mode 0002  
            ??_OpenUSART 0003         __size_of_IdleI2C 0012          OpenUSART@config 0003  
     __end_of_getc_USART 6C8C         __size_of_ReadI2C 001C         __size_of_ReadISL 0048  
               __Hrparam 0000         __size_of_OpenI2C 001E         __size_of_OpenISL 0014  
               __Lrparam 0000                 _StartISL 6CC2                 _WriteI2C 6EAA  
               _WriteISL 6D78              ??_StatusISL 0005                 __ptext10 6DEA  
               __ptext11 6DAE                 __ptext20 6EAA                 __ptext12 6CE2  
               __ptext21 6CD0                 __ptext13 6C7A                 __ptext14 6CA6  
               __ptext15 6EF6                 __ptext16 6E62                 __ptext17 6D20  
               __ptext18 6C98                 __ptext19 6D78            __size_of_main 0058  
             _INTCONbits 000FF2           OpenUSART@spbrg 0001              ColorGREEN@a 0006  
             ColorBLUE@a 0006              _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
          ??_ConfigUsart 0004             _USART_Status 0008  
